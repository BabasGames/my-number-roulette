{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babas\\\\Documents\\\\web\\\\roullette\\\\my-number-roulette\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { button } from './components/ui/button';\nimport { AlertCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberRoulette = () => {\n  _s();\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [currentNumber, setCurrentNumber] = useState(1);\n  const [finalNumber, setFinalNumber] = useState(null);\n  const [volume, setVolume] = useState(0.5); // Default volume is set to 50%\n  const backgroundMusicRef = useRef(null);\n  useEffect(() => {\n    let interval;\n    if (isSpinning) {\n      interval = setInterval(() => {\n        setCurrentNumber(prevNumber => prevNumber % 10 + 1);\n      }, 100);\n    } else if (finalNumber) {\n      clearInterval(interval);\n      setCurrentNumber(finalNumber);\n    }\n    return () => clearInterval(interval);\n  }, [isSpinning, finalNumber]);\n  useEffect(() => {\n    // Play background music in loop\n    backgroundMusicRef.current = new Audio('/background.mp3');\n    backgroundMusicRef.current.loop = true;\n    backgroundMusicRef.current.volume = volume;\n    backgroundMusicRef.current.play();\n    return () => {\n      // Cleanup: stop the music when the component unmounts\n      backgroundMusicRef.current.pause();\n      backgroundMusicRef.current = null;\n    };\n  }, []);\n  useEffect(() => {\n    // Update the volume of the background music\n    if (backgroundMusicRef.current) {\n      backgroundMusicRef.current.volume = volume;\n    }\n  }, [volume]);\n  const handleSpin = () => {\n    setIsSpinning(true);\n    setFinalNumber(null);\n    playSound('/spin-start.mp3');\n    setTimeout(() => {\n      setIsSpinning(false);\n      const newFinalNumber = Math.floor(Math.random() * 10) + 1;\n      setFinalNumber(newFinalNumber);\n      playSound('/spin-stop.mp3');\n    }, 3000);\n  };\n  const playSound = soundFile => {\n    const audio = new Audio(soundFile);\n    audio.volume = volume;\n    audio.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-8xl font-bold mb-8 transition-all duration-300 ${isSpinning ? 'animate-bounce text-yellow-300' : finalNumber ? 'animate-pulse text-green-300' : 'text-white'}`,\n      children: currentNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSpin,\n      disabled: isSpinning,\n      className: `px-6 py-3 text-xl font-semibold rounded-full shadow-lg transition-all duration-300 ${isSpinning ? 'bg-gray-500 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600 active:bg-blue-700'}`,\n      children: isSpinning ? /*#__PURE__*/_jsxDEV(AlertCircle, {\n        className: \"w-6 h-6 animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : 'Tourner'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 w-full flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: volume,\n        onChange: e => setVolume(parseFloat(e.target.value)),\n        className: \"w-3/4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(NumberRoulette, \"BDWCxmP676l1p+Ofe4SREA9x7g4=\");\n_c = NumberRoulette;\nexport default NumberRoulette;\nvar _c;\n$RefreshReg$(_c, \"NumberRoulette\");","map":{"version":3,"names":["React","useState","useEffect","useRef","button","AlertCircle","jsxDEV","_jsxDEV","NumberRoulette","_s","isSpinning","setIsSpinning","currentNumber","setCurrentNumber","finalNumber","setFinalNumber","volume","setVolume","backgroundMusicRef","interval","setInterval","prevNumber","clearInterval","current","Audio","loop","play","pause","handleSpin","playSound","setTimeout","newFinalNumber","Math","floor","random","soundFile","audio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Button","onClick","disabled","type","min","max","step","value","onChange","e","parseFloat","target","_c","$RefreshReg$"],"sources":["C:/Users/babas/Documents/web/roullette/my-number-roulette/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { button } from './components/ui/button';\nimport { AlertCircle } from 'lucide-react';\n\nconst NumberRoulette = () => {\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [currentNumber, setCurrentNumber] = useState(1);\n  const [finalNumber, setFinalNumber] = useState(null);\n  const [volume, setVolume] = useState(0.5); // Default volume is set to 50%\n  const backgroundMusicRef = useRef(null);\n\n  useEffect(() => {\n    let interval;\n    if (isSpinning) {\n      interval = setInterval(() => {\n        setCurrentNumber((prevNumber) => (prevNumber % 10) + 1);\n      }, 100);\n    } else if (finalNumber) {\n      clearInterval(interval);\n      setCurrentNumber(finalNumber);\n    }\n    return () => clearInterval(interval);\n  }, [isSpinning, finalNumber]);\n\n  useEffect(() => {\n    // Play background music in loop\n    backgroundMusicRef.current = new Audio('/background.mp3');\n    backgroundMusicRef.current.loop = true;\n    backgroundMusicRef.current.volume = volume;\n    backgroundMusicRef.current.play();\n\n    return () => {\n      // Cleanup: stop the music when the component unmounts\n      backgroundMusicRef.current.pause();\n      backgroundMusicRef.current = null;\n    };\n  }, []);\n\n  useEffect(() => {\n    // Update the volume of the background music\n    if (backgroundMusicRef.current) {\n      backgroundMusicRef.current.volume = volume;\n    }\n  }, [volume]);\n\n  const handleSpin = () => {\n    setIsSpinning(true);\n    setFinalNumber(null);\n    playSound('/spin-start.mp3');\n    setTimeout(() => {\n      setIsSpinning(false);\n      const newFinalNumber = Math.floor(Math.random() * 10) + 1;\n      setFinalNumber(newFinalNumber);\n      playSound('/spin-stop.mp3');\n    }, 3000);\n  };\n\n  const playSound = (soundFile) => {\n    const audio = new Audio(soundFile);\n    audio.volume = volume;\n    audio.play();\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\">\n      <div className={`text-8xl font-bold mb-8 transition-all duration-300 ${isSpinning ? 'animate-bounce text-yellow-300' : finalNumber ? 'animate-pulse text-green-300' : 'text-white'}`}>\n        {currentNumber}\n      </div>\n      <Button\n        onClick={handleSpin}\n        disabled={isSpinning}\n        className={`px-6 py-3 text-xl font-semibold rounded-full shadow-lg transition-all duration-300 ${\n          isSpinning ? 'bg-gray-500 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600 active:bg-blue-700'\n        }`}\n      >\n        {isSpinning ? (\n          <AlertCircle className=\"w-6 h-6 animate-spin\" />\n        ) : (\n          'Tourner'\n        )}\n      </Button>\n\n      {/* Slider for Volume Control */}\n      <div className=\"mt-8 w-full flex justify-center\">\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={volume}\n          onChange={(e) => setVolume(parseFloat(e.target.value))}\n          className=\"w-3/4\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NumberRoulette;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}